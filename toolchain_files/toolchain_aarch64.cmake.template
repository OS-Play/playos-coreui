# the name of the target operating system
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR aarch64)
set(CMAKE_HOST_SYSTEM_NAME Linux)
set(CMAKE_HOST_SYSTEM_PROCESSOR x86_64)
set(CMAKE_C_COMPILER_WORKS 1)
set(CMAKE_CXX_COMPILER_WORKS 1)

# where is the target environment located
set(CMAKE_SYSROOT "")
set(SYSROOT_USR_INCLUDE_DIRS "${CMAKE_SYSROOT}/usr/include")

# which compilers to use for C and C++
set(CMAKE_C_COMPILER   aarch64-linux-gnu-gcc)
set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)

set( CMAKE_C_FLAGS "-I${SYSROOT_USR_INCLUDE_DIRS}" CACHE STRING "CFLAGS" )
set( CMAKE_CXX_FLAGS "-I${SYSROOT_USR_INCLUDE_DIRS}" CACHE STRING "CXXFLAGS" )

# adjust the default behavior of the FIND_XXX() commands:
# search programs in the host environment
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
# search headers and libraries in the target environment
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(ENV{PKG_CONFIG_SYSROOT_DIR} ${CMAKE_FIND_ROOT_PATH})
set(ENV{FLUTTER_ENGINE_SOURCE_DIR} "") # Setup path of flutter engine src
set(ENV{FLUTTER_OUTPUT_DIR} "") # Setup output path of flutter engine build directory

set(MESON_CROSS_ARGS --cross-file ${CMAKE_SOURCE_DIR}/toolchain_files/meson_aarch64.txt)

list(APPEND CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES ${SYSROOT_USR_INCLUDE_DIRS}) # set c include dir for sysroot
list(APPEND CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES ${SYSROOT_USR_INCLUDE_DIRS}) # set c include dir for sysroot
